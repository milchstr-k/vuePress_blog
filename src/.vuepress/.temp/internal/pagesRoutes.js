export const pagesRoutes = [
  ["v-8daa1a0e","/",{"y":"h","t":"主页","i":"home"},["/index.html","/README.md"]],
  ["v-0c493c66","/docs/other/%E5%91%A8%E8%BE%B9%E5%88%9B%E6%84%8F%E8%AE%A1%E5%88%92%E4%B9%A6.html",{"d":1700209207000,"e":"<h1> 周边创意计划书</h1>\n<p>该文档为周边创意-奇思妙想小分队时间安排及成员分工计划书。</p>\n<h2> 1. 时间安排</h2>\n<p>项目时间为9月1日开始，9月7日1.0版初稿交付，9月14日2.0版终稿交付。中间分为草图设计、初稿交付、优化修改、终稿确定四个阶段。以下是每个阶段的开始结束时间安排：</p>\n<h3> 1.1 草图设计</h3>\n<p>草图设计阶段时间为9月1日-9月4日</p>\n<h3> 1.2 初稿交付</h3>\n<p>初稿交付阶段时间为9月5日-9月7日</p>\n<h3> 1.3 优化修改</h3>\n<p>优化修改阶段时间为9月8日-9月13日</p>","r":{"minutes":1.15,"words":344},"y":"a","t":"周边创意计划书"},["/docs/other/周边创意计划书.html","/docs/other/%E5%91%A8%E8%BE%B9%E5%88%9B%E6%84%8F%E8%AE%A1%E5%88%92%E4%B9%A6","/docs/other/周边创意计划书.md","/docs/other/%E5%91%A8%E8%BE%B9%E5%88%9B%E6%84%8F%E8%AE%A1%E5%88%92%E4%B9%A6.md"]],
  ["v-483fcde2","/docs/JAVA/comparator%E6%8E%92%E5%BA%8F.html",{"d":1700209207000,"c":["Java"],"g":["Comparator排序"],"e":"<h1> Comparator排序</h1>\n<blockquote>\n<p>📌 <strong>关键词：</strong> java、Comparator排序</p>\n</blockquote>\n<h2> comparing</h2>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><pre class=\"language-java\"><code><span class=\"token comment\">//返回 对象集合以类属性一升序排序</span>\nlist<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sorted</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Comparator</span><span class=\"token punctuation\">.</span><span class=\"token function\">comparing</span><span class=\"token punctuation\">(</span>类<span class=\"token operator\">::</span>属性一<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//先以属性一升序,结果进行属性一降序</span>\nlist<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sorted</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Comparator</span><span class=\"token punctuation\">.</span><span class=\"token function\">comparing</span><span class=\"token punctuation\">(</span>类<span class=\"token operator\">::</span>属性一<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">reversed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//以属性一降序</span>\nlist<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sorted</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Comparator</span><span class=\"token punctuation\">.</span><span class=\"token function\">comparing</span><span class=\"token punctuation\">(</span>类<span class=\"token operator\">::</span>属性一<span class=\"token punctuation\">,</span><span class=\"token class-name\">Comparator</span><span class=\"token punctuation\">.</span><span class=\"token function\">reverseOrder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//返回 对象集合以类属性一升序 属性二升序</span>\nlist<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sorted</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Comparator</span><span class=\"token punctuation\">.</span><span class=\"token function\">comparing</span><span class=\"token punctuation\">(</span>类<span class=\"token operator\">::</span>属性一<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">thenComparing</span><span class=\"token punctuation\">(</span>类<span class=\"token operator\">::</span>属性二<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\">//先以属性一升序,升序结果进行属性一降序,再进行属性二升序</span>\nlist<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sorted</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Comparator</span><span class=\"token punctuation\">.</span><span class=\"token function\">comparing</span><span class=\"token punctuation\">(</span>类<span class=\"token operator\">::</span>属性一<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">reversed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">thenComparing</span><span class=\"token punctuation\">(</span>类<span class=\"token operator\">::</span>属性二<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//先以属性一降序,再进行属性二升序</span>\nlist<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sorted</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Comparator</span><span class=\"token punctuation\">.</span><span class=\"token function\">comparing</span><span class=\"token punctuation\">(</span>类<span class=\"token operator\">::</span>属性一<span class=\"token punctuation\">,</span><span class=\"token class-name\">Comparator</span><span class=\"token punctuation\">.</span><span class=\"token function\">reverseOrder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">thenComparing</span><span class=\"token punctuation\">(</span>类<span class=\"token operator\">::</span>属性二<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\">//先以属性一升序,升序结果进行属性一降序,再进行属性二降序</span>\nlist<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sorted</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Comparator</span><span class=\"token punctuation\">.</span><span class=\"token function\">comparing</span><span class=\"token punctuation\">(</span>类<span class=\"token operator\">::</span>属性一<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">reversed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">thenComparing</span><span class=\"token punctuation\">(</span>类<span class=\"token operator\">::</span>属性二<span class=\"token punctuation\">,</span><span class=\"token class-name\">Comparator</span><span class=\"token punctuation\">.</span><span class=\"token function\">reverseOrder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//先以属性一降序,再进行属性二降序</span>\nlist<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sorted</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Comparator</span><span class=\"token punctuation\">.</span><span class=\"token function\">comparing</span><span class=\"token punctuation\">(</span>类<span class=\"token operator\">::</span>属性一<span class=\"token punctuation\">,</span><span class=\"token class-name\">Comparator</span><span class=\"token punctuation\">.</span><span class=\"token function\">reverseOrder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">thenComparing</span><span class=\"token punctuation\">(</span>类<span class=\"token operator\">::</span>属性二<span class=\"token punctuation\">,</span><span class=\"token class-name\">Comparator</span><span class=\"token punctuation\">.</span><span class=\"token function\">reverseOrder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\">//先以属性一升序,升序结果进行属性一降序,再进行属性二升序,结果进行属性一降序属性二降序</span>\nlist<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sorted</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Comparator</span><span class=\"token punctuation\">.</span><span class=\"token function\">comparing</span><span class=\"token punctuation\">(</span>类<span class=\"token operator\">::</span>属性一<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">reversed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">thenComparing</span><span class=\"token punctuation\">(</span>类<span class=\"token operator\">::</span>属性二<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">reversed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//先以属性一升序,再进行属性二降序</span>\nlist<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sorted</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Comparator</span><span class=\"token punctuation\">.</span><span class=\"token function\">comparing</span><span class=\"token punctuation\">(</span>类<span class=\"token operator\">::</span>属性一<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">thenComparing</span><span class=\"token punctuation\">(</span>类<span class=\"token operator\">::</span>属性二<span class=\"token punctuation\">,</span><span class=\"token class-name\">Comparator</span><span class=\"token punctuation\">.</span><span class=\"token function\">reverseOrder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":1.47,"words":441},"y":"a","t":"Comparator排序","i":"pen-to-square"},["/docs/JAVA/comparator排序.html","/docs/JAVA/comparator%E6%8E%92%E5%BA%8F","/docs/JAVA/comparator排序.md","/docs/JAVA/comparator%E6%8E%92%E5%BA%8F.md"]],
  ["v-4f5506b0","/docs/JAVA/Java%E5%AF%B9%E8%B1%A1%E5%86%85%E5%AD%98%E5%88%86%E6%9E%90.html",{"d":1700209207000,"c":["Java"],"g":["对象"],"e":"<h1> Java对象</h1>\n<blockquote>\n<p>📌 <strong>关键词：</strong> java、内存</p>\n</blockquote>\n<h2> 对象构成</h2>\n<ul>\n<li>对象头\n<ul>\n<li>Mark Word: 对象运行时数据，动态定义位数据。包含 HashCode、GC 分代年龄、锁状态标志、线程持有的锁、偏向线程 ID、偏向时间戳等。32 位和 64 位的 VM 里 Mark Word 的长度分别 32 bit 和 64 bit。</li>\n<li>Class Pointer: 类型指针，存储一个地址，长度取决于系统位数.对象指向所属 class 的元数据的指针，32 位 VM 4 byte，64 位 VM 8 byte(-XX:+UseCompressedOops 压缩指针 4 byte)。非必需，取决 JVM 实现。</li>\n<li>若为数组对象，包含长度信息，4 byte。</li>\n</ul>\n</li>\n</ul>","r":{"minutes":3.95,"words":1186},"y":"a","t":"Java对象","i":"pen-to-square"},["/docs/JAVA/Java对象内存分析.html","/docs/JAVA/Java%E5%AF%B9%E8%B1%A1%E5%86%85%E5%AD%98%E5%88%86%E6%9E%90","/docs/JAVA/Java对象内存分析.md","/docs/JAVA/Java%E5%AF%B9%E8%B1%A1%E5%86%85%E5%AD%98%E5%88%86%E6%9E%90.md"]],
  ["v-77bca968","/docs/JAVA/Java%E6%8A%A5%E9%94%99.html",{"d":1700209207000,"c":["Java"],"g":["报错"],"e":"<h1> 报错</h1>\n<blockquote>\n<p>📌 <strong>关键词：</strong> java、报错</p>\n</blockquote>\n<h2> 1. AsyncRequestTimeoutException异常</h2>\n<p>原因：响应太慢</p>\n<p>spring.mvc.async.request-timeout</p>\n<blockquote>\n<p>Amount of time before asynchronous request handling times out. If this value is not set, the default timeout of the underlying implementation is used.</p>\n</blockquote>","r":{"minutes":0.43,"words":130},"y":"a","t":"报错","i":"pen-to-square"},["/docs/JAVA/Java报错.html","/docs/JAVA/Java%E6%8A%A5%E9%94%99","/docs/JAVA/Java报错.md","/docs/JAVA/Java%E6%8A%A5%E9%94%99.md"]],
  ["v-af4f6286","/docs/JAVA/JsonPath%E4%BD%BF%E7%94%A8.html",{"d":1700209207000,"c":["Java"],"g":["JsonPath"],"e":"<h1> JsonPath</h1>\n<blockquote>\n<p>📌 <strong>关键词：</strong> java、Json解析</p>\n</blockquote>\n<h2> 概述</h2>\n<p>正如XPath解析XML文档一样，JsonPath提供了对Json文档的解析能力。通过使用JsonPath查找Json节点获取数据，JsonPath就是XPath在Json上的使用。</p>\n<h2> 语法</h2>\n<table>\n<thead>\n<tr>\n<th>操作</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>$</td>\n<td>查询根元素</td>\n</tr>\n<tr>\n<td>@</td>\n<td>过滤器断言处理的当前节点对象，类似java中的this字段</td>\n</tr>\n<tr>\n<td>*</td>\n<td>通配符，必要时可用任何地方的名称或数字</td>\n</tr>\n<tr>\n<td>..</td>\n<td>递归搜索，在任何地方可以使用名称</td>\n</tr>\n<tr>\n<td>.A</td>\n<td>表示一个A子节点</td>\n</tr>\n<tr>\n<td>[A]huo[A,B]</td>\n<td>迭代器下标，表示一个或多个数组下标</td>\n</tr>\n<tr>\n<td>[start:end]</td>\n<td>数组片段，区间为[start:end)，不包含end</td>\n</tr>\n<tr>\n<td>?()</td>\n<td>过滤器表达式，筛选操作</td>\n</tr>\n</tbody>\n</table>","r":{"minutes":1.33,"words":399},"y":"a","t":"JsonPath","i":"pen-to-square"},["/docs/JAVA/JsonPath使用.html","/docs/JAVA/JsonPath%E4%BD%BF%E7%94%A8","/docs/JAVA/JsonPath使用.md","/docs/JAVA/JsonPath%E4%BD%BF%E7%94%A8.md"]],
  ["v-7b397e82","/docs/JAVA/springboot%E6%8E%A5%E6%94%B6http%E8%AF%B7%E6%B1%82_%E8%A7%A3%E5%86%B3%E5%8F%82%E6%95%B0%E4%B8%AD_%E5%8F%B7%E5%8F%98%E6%88%90%E7%A9%BA%E6%A0%BC%E7%9A%84%E9%97%AE%E9%A2%98.html",{"d":1700209207000,"c":["Java"],"g":["springboot","转码"],"e":"<h1> springboot接收http请求,解决参数中+号变成空格的问题</h1>\n<blockquote>\n<p>📌 <strong>关键词：</strong> springboot、转码</p>\n</blockquote>\n<h2> 原因</h2>\n<p>前端参数传到后端时，参数经过tomcat校验，<strong>tomcat中Parameters类中convert方法对参数解码</strong>，把\"+\"替换成空格。</p>\n<p>Tomcat的新版本中增加了一个新特性，严格按照 RFC 3986规范进行访问解析，而 RFC 3986规范定义了Url中只允许包含英文字母（a-zA-Z）、数字（0-9）、-_.~4个特殊字符以及所有保留字符(RFC3986中指定了以下字符为保留字符：! * ' ( ) ; : @ &amp; = + $ , / ? # [ ])。</p>","r":{"minutes":0.9,"words":269},"y":"a","t":"springboot接收http请求,解决参数中+号变成空格的问题","i":"pen-to-square"},["/docs/JAVA/springboot接收http请求_解决参数中_号变成空格的问题.html","/docs/JAVA/springboot%E6%8E%A5%E6%94%B6http%E8%AF%B7%E6%B1%82_%E8%A7%A3%E5%86%B3%E5%8F%82%E6%95%B0%E4%B8%AD_%E5%8F%B7%E5%8F%98%E6%88%90%E7%A9%BA%E6%A0%BC%E7%9A%84%E9%97%AE%E9%A2%98","/docs/JAVA/springboot接收http请求,解决参数中+号变成空格的问题.html","/docs/JAVA/springboot%E6%8E%A5%E6%94%B6http%E8%AF%B7%E6%B1%82,%E8%A7%A3%E5%86%B3%E5%8F%82%E6%95%B0%E4%B8%AD+%E5%8F%B7%E5%8F%98%E6%88%90%E7%A9%BA%E6%A0%BC%E7%9A%84%E9%97%AE%E9%A2%98.html","/docs/JAVA/springboot接收http请求,解决参数中+号变成空格的问题.md","/docs/JAVA/springboot%E6%8E%A5%E6%94%B6http%E8%AF%B7%E6%B1%82,%E8%A7%A3%E5%86%B3%E5%8F%82%E6%95%B0%E4%B8%AD+%E5%8F%B7%E5%8F%98%E6%88%90%E7%A9%BA%E6%A0%BC%E7%9A%84%E9%97%AE%E9%A2%98.md"]],
  ["v-d385eef2","/docs/JAVA/%E6%97%B6%E5%8C%BA%E8%BD%AC%E6%8D%A2.html",{"d":1700209207000,"c":["Java"],"g":["时区","java"],"e":"<h1> 时区</h1>\n<blockquote>\n<p>📌 <strong>关键词：</strong> java、时区</p>\n</blockquote>\n<h2> 概述</h2>\n<p>为了照顾到各地区的使用方便，又使其他地方的人容易将本地的时间换算到别的地方时间上去。有关国际会议决定将地球表面按经线从东到西，划成一个个区域，并且规定相邻区域的时间相差1小时。<strong>向西减1小时，向东加1小时</strong>，跨过几个区域就加或减几小时。</p>\n<p>现今全球共分为24个时区。实际上，常常1个国家或1个省份同时跨着2个或更多时区，为了照顾到行政上的方便，常将1个国家或1个省份划在一起。所以时区并不严格按南北直线来划分，而是按自然条件来划分。例如，<strong>中国幅员宽广，差不多跨5个时区，但为了使用方便简单，实际上在只用东八时区的标准时即北京时间为准。</strong></p>","r":{"minutes":1.93,"words":579},"y":"a","t":"时区","i":"pen-to-square"},["/docs/JAVA/时区转换.html","/docs/JAVA/%E6%97%B6%E5%8C%BA%E8%BD%AC%E6%8D%A2","/docs/JAVA/时区转换.md","/docs/JAVA/%E6%97%B6%E5%8C%BA%E8%BD%AC%E6%8D%A2.md"]],
  ["v-dad37eaa","/docs/worker/review.html",{"d":1700209207000,"e":"<h1> 订单管理</h1>\n<h2> 订单详情</h2>\n<h3> 职责</h3>\n<p>面对坐席人员，吐出组装后的全量数据。将整体订单按模块划分，每个模块数据分层展示。<br>\n整体依赖三大中心：<strong>呼叫中心、积分平台、交易中心</strong>。八个服务：<strong>订单服务、交易对接服务、积分平台、交易中心、基础数据服务、对外对接服务、审核服务及高频服务</strong>。</p>\n<h3> 实现</h3>\n<p>底层通过<strong>StrategyFactory</strong>策略工厂类将订单渠道隔离，目前分为积分平台和交易中心两大渠道。对不同订单（销售、改期、快照订单、外渠道）有不同实现方式，以<strong>IOrderDetail抽象类</strong>为基底实现不同需求。当有额外需求时<strong>横向扩展</strong>即可。</p>","r":{"minutes":2.77,"words":830},"y":"a","t":"订单管理"},["/docs/worker/review","/docs/worker/review.md"]],
  ["v-da628350","/docs/%E8%80%83%E8%AF%95/%E8%BD%AF%E8%80%83%E7%9F%A5%E8%AF%86%E7%82%B9.html",{"d":1700209207000,"e":"<h1> 综合知识</h1>\n<h1> 案例</h1>\n<h2> 简要说明Fast开发方法每个阶段主要任务</h2>\n<ul>\n<li>初始研究阶段\n<ul>\n<li>列出问题、机会和指示</li>\n<li>协商项目的初步范围</li>\n<li>评估项目价值</li>\n<li>计划项目</li>\n</ul>\n</li>\n<li>问题分析阶段\n<ul>\n<li>研究问题领域</li>\n<li>分析问题和机会</li>\n<li>分析业务过程</li>\n<li>制定系统改进目标</li>\n<li>修改项目计划</li>\n<li>阶段确认</li>\n</ul>\n</li>\n<li>需求分析阶段\n<ul>\n<li>定义需求</li>\n<li>分析功能需求</li>\n<li>跟踪和完善需求</li>\n<li>排列需求的优先次序</li>\n<li>修改项目计划</li>\n</ul>\n</li>\n<li>决策分析阶段\n<ul>\n<li>确定候选方案</li>\n<li>分析候选方案</li>\n<li>比较候选方案</li>\n<li>修改项目计划</li>\n<li>推荐一个方案</li>\n</ul>\n</li>\n</ul>","r":{"minutes":7.43,"words":2229},"y":"a","t":"综合知识"},["/docs/考试/软考知识点.html","/docs/%E8%80%83%E8%AF%95/%E8%BD%AF%E8%80%83%E7%9F%A5%E8%AF%86%E7%82%B9","/docs/考试/软考知识点.md","/docs/%E8%80%83%E8%AF%95/%E8%BD%AF%E8%80%83%E7%9F%A5%E8%AF%86%E7%82%B9.md"]],
  ["v-1c3fc53b","/docs/%E9%83%A8%E7%BD%B2/centos8%E5%AE%89%E8%A3%85docker-compose.html",{"d":1700209207000,"c":["centos"],"g":["docker-compose"],"e":"<h1> linux安装docker-compose</h1>\n<blockquote>\n<p>📌 <strong>关键词：</strong> docker-compose、centOs8</p>\n</blockquote>\n<h2> 下载路径</h2>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><pre class=\"language-text\"><code># 下载版本\nsudo curl -L \"https://github.com/docker/compose/releases/download/v2.20.0/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose\n\n\n# 执行权限\nchmod +x /usr/local/bin/docker-compose\n\n# 创建软连接\nsudo ln -s /usr/local/bin/docker-compose ~/app/docker-compose\n\n# 查看是否安装成功\nll /usr/local/bin\n\n# 查看版本\ndocker-compose --version\n\n# 卸载\nrm /usr/local/bin/docker-compose \n\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":0.3,"words":89},"y":"a","t":"linux安装docker-compose","i":"pen-to-square"},["/docs/部署/centos8安装docker-compose.html","/docs/%E9%83%A8%E7%BD%B2/centos8%E5%AE%89%E8%A3%85docker-compose","/docs/部署/centos8安装docker-compose.md","/docs/%E9%83%A8%E7%BD%B2/centos8%E5%AE%89%E8%A3%85docker-compose.md"]],
  ["v-2079e746","/docs/%E9%83%A8%E7%BD%B2/docker-compose%E8%84%9A%E6%9C%AC.html",{"d":1700209207000,"c":["docker"],"g":["docker-compose","脚本"],"e":"<h1> docker-compose脚本</h1>\n<blockquote>\n<p>📌 <strong>关键词：</strong> docker-compose、脚本</p>\n</blockquote>\n<h2> Kafka3</h2>\n<p>Kafka3无需安装zookeeper</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><pre class=\"language-text\"><code>version: \"3\"\nservices:\n  kafka:\n    image: bitnami/kafka:latest\n    user: root\n    ports:\n      - 9092:9092\n      - 9093:9093\n    environment:\n      - KAFKA_ENABLE_KRAFT=yes  # kraft模式\n      - KAFKA_CFG_PROCESS_ROLES=broker,controller # 服务器在KRaft模式中同时充当Broker和Controller。\n      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER\n      - KAFKA_CFG_LISTENER=PLAINTEXT://:9092,CONTROLLER://:9093\n      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT\n      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092 #宿主机ip\n      - KAFKA_BROKER_ID=1\n      - KAFKA_KRAFT_CLUSTER_ID=7es-47FeQpCKpLfsN1uPxQ\n      - KAFKA_CFG_CONTROLLER_QUORUM_VOYERS=1@localhost:9093\n      - ALLOW_PLAINTEXT_LISTENER=yes  # 允许使用PLAINTEXT侦听器\n\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":1.63,"words":489},"y":"a","t":"docker-compose脚本","i":"pen-to-square"},["/docs/部署/docker-compose脚本.html","/docs/%E9%83%A8%E7%BD%B2/docker-compose%E8%84%9A%E6%9C%AC","/docs/部署/docker-compose脚本.md","/docs/%E9%83%A8%E7%BD%B2/docker-compose%E8%84%9A%E6%9C%AC.md"]],
  ["v-5800c8f8","/docs/%E9%83%A8%E7%BD%B2/docker%E6%8A%A5%E9%94%99.html",{"d":1700209207000,"c":["docker"],"g":["问题"],"e":"<h1> docker问题</h1>\n<blockquote>\n<p>📌 <strong>关键词：</strong> docker、问题</p>\n</blockquote>\n<h2> 1.docker: Error response from daemon Timeout</h2>\n<p>在等待报头时超时，  请求在等待连接时被取消(客户端)。Docker 默认的源为国外官方源，下载速度较慢，可改为国内镜像源。</p>\n<p>① 修改docker镜像源，如果没有 daemon.json就新建添加以下内容：</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><pre class=\"language-text\"><code>[root@localhost ~]# cd /etc/docker\n[root@localhost docker]# ls\ndaemon.json  key.json\n[root@localhost docker]# vim daemon.json \n \n # 添加以下内容\n{\n \n  \"registry-mirrors\": [\"http://hub-mirror.c.163.com\"]\n \n}\n \n# 也可以添加多个国内源\n{\n \n\"registry-mirrors\": [\"http://hub-mirror.c.163.com\", \"https://registry.docker-cn.com\"]\n \n}\n\n\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":0.75,"words":224},"y":"a","t":"docker问题","i":"pen-to-square"},["/docs/部署/docker报错.html","/docs/%E9%83%A8%E7%BD%B2/docker%E6%8A%A5%E9%94%99","/docs/部署/docker报错.md","/docs/%E9%83%A8%E7%BD%B2/docker%E6%8A%A5%E9%94%99.md"]],
  ["v-34c938b0","/docs/%E9%83%A8%E7%BD%B2/vmware%E5%AE%89%E8%A3%85.html",{"d":1700209207000,"c":["windows"],"g":["vmware安装"],"e":"<h1> windows下安装vmware</h1>\n<blockquote>\n<p>📌 <strong>关键词：</strong> vmware安装</p>\n</blockquote>\n<h2> 下载路径</h2>\n<ul>\n<li>vmware</li>\n</ul>\n<p><a href=\"https://customerconnect.vmware.com/cn/downloads/info/slug/desktop_end_user_computing/vmware_workstation_pro/16_0\" target=\"_blank\" rel=\"noopener noreferrer\">https://customerconnect.vmware.com/cn/downloads/info/slug/desktop_end_user_computing/vmware_workstation_pro/16_0</a></p>","r":{"minutes":1.16,"words":348},"y":"a","t":"windows下安装vmware","i":"pen-to-square"},["/docs/部署/vmware安装.html","/docs/%E9%83%A8%E7%BD%B2/vmware%E5%AE%89%E8%A3%85","/docs/部署/vmware安装.md","/docs/%E9%83%A8%E7%BD%B2/vmware%E5%AE%89%E8%A3%85.md"]],
  ["v-2efb8564","/docs/%E9%83%A8%E7%BD%B2/vmware%E5%AE%89%E8%A3%85centos.html",{"d":1700209207000,"c":["windows"],"g":["vmware","centos7"],"e":"<h1> windows下安装vmware</h1>\n<blockquote>\n<p>📌 <strong>关键词：</strong> vmware、centos7</p>\n</blockquote>\n<h2> 安装</h2>\n<p><a href=\"https://zhuanlan.zhihu.com/p/567214294\" target=\"_blank\" rel=\"noopener noreferrer\">https://zhuanlan.zhihu.com/p/567214294</a></p>\n","r":{"minutes":0.1,"words":29},"y":"a","t":"windows下安装vmware","i":"pen-to-square"},["/docs/部署/vmware安装centos.html","/docs/%E9%83%A8%E7%BD%B2/vmware%E5%AE%89%E8%A3%85centos","/docs/部署/vmware安装centos.md","/docs/%E9%83%A8%E7%BD%B2/vmware%E5%AE%89%E8%A3%85centos.md"]],
  ["v-50c6a042","/docs/JAVA/%E5%A4%9A%E7%BA%BF%E7%A8%8B/Sychronized%E5%92%8CReentrantLock%E4%B8%8D%E5%90%8C%E7%82%B9.html",{"d":1700209207000,"c":["Java"],"e":"<h1> 线程池状态</h1>\n<blockquote>\n<p>📌 <strong>关键词：</strong> java、线程池状态</p>\n</blockquote>\n","r":{"minutes":0.09,"words":27},"y":"a","t":"线程池状态","i":"pen-to-square"},["/docs/JAVA/多线程/Sychronized和ReentrantLock不同点.html","/docs/JAVA/%E5%A4%9A%E7%BA%BF%E7%A8%8B/Sychronized%E5%92%8CReentrantLock%E4%B8%8D%E5%90%8C%E7%82%B9","/docs/JAVA/多线程/Sychronized和ReentrantLock不同点.md","/docs/JAVA/%E5%A4%9A%E7%BA%BF%E7%A8%8B/Sychronized%E5%92%8CReentrantLock%E4%B8%8D%E5%90%8C%E7%82%B9.md"]],
  ["v-503e4745","/docs/JAVA/%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E7%BA%BF%E7%A8%8B%E6%B1%A0%E7%8A%B6%E6%80%81.html",{"d":1700209207000,"c":["Java"],"g":["线程池"],"e":"<h1> 线程池状态</h1>\n<blockquote>\n<p>📌 <strong>关键词：</strong> java、线程池状态</p>\n</blockquote>\n<h2> RUNNING</h2>\n<p>线程池正常运行，既能接受新任务，也会正常处理队列中任务。</p>\n<h2> SHUTDOWN</h2>\n<p>当调用线程池的shutdown()方法时，线程池进入SHUTDOWN状态，标识线程池处于正在关闭状态，此状态下<strong>线程池不会接受新任务，但会继续把队列中任务处理完</strong>。</p>\n<h2> STOP</h2>\n<p>当调用线程池的shutdownnow()方法时，线程池进入STOP状态，标识线程池处于正在停止状态，此状态下<strong>线程池不会接受新任务，不会处理队列中任务</strong>，并且正在运行的线程也会被中断。</p>","r":{"minutes":0.82,"words":246},"y":"a","t":"线程池状态","i":"pen-to-square"},["/docs/JAVA/多线程/线程池状态.html","/docs/JAVA/%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E7%BA%BF%E7%A8%8B%E6%B1%A0%E7%8A%B6%E6%80%81","/docs/JAVA/多线程/线程池状态.md","/docs/JAVA/%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E7%BA%BF%E7%A8%8B%E6%B1%A0%E7%8A%B6%E6%80%81.md"]],
  ["v-59b347ce","/docs/%E5%B7%A5%E5%85%B7/es/es%E6%9F%A5%E8%AF%A2%E8%AF%AD%E5%8F%A5.html",{"d":1700209207000,"c":["工具"],"g":["es"],"e":"<h1> 时区</h1>\n<blockquote>\n<p>📌 <strong>关键词：</strong> es、查询</p>\n</blockquote>\n<h2> 1. ES分词器</h2>\n<p>在学习查询语法之前有必要带大家了解一下ES的分词器。因为这是题主认为ES搜索引擎最大的特点了，它查询速度之所以这么快也和这个有很大关系。但更重要的是，如果我们不了解ES会对你存储的索引文本或者查询query进行分词，后面的语法你将很难理解。</p>\n<p>对于我们存入ES索引（Index）中的各个字段（Term），ES内部都会有一个分词器对其进行分词，然后将这个分词结果存储起来，方便你未来的查询使用，这个分词器我们也可以直接很方便的调用，只要访问其_analyze即可：</p>","r":{"minutes":9.93,"words":2978},"y":"a","t":"时区","i":"pen-to-square"},["/docs/工具/es/es查询语句.html","/docs/%E5%B7%A5%E5%85%B7/es/es%E6%9F%A5%E8%AF%A2%E8%AF%AD%E5%8F%A5","/docs/工具/es/es查询语句.md","/docs/%E5%B7%A5%E5%85%B7/es/es%E6%9F%A5%E8%AF%A2%E8%AF%AD%E5%8F%A5.md"]],
  ["v-0f4b698a","/docs/%E5%B7%A5%E5%85%B7/git/git%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95.html",{"d":1700209207000,"c":["git"],"g":["git"],"e":"<h1> git问题</h1>\n<blockquote>\n<p>📌 <strong>关键词：</strong> git</p>\n</blockquote>\n<h2> 不小心git reset --hard</h2>\n<ul>\n<li>当前修改没提交commit，通过idea中的本地历史进行查看（Local History）</li>\n<li>提交commit\n<ul>\n<li>git fsck --lost-found  // 获取commit过的代码痕迹</li>\n<li>git show xxxx</li>\n<li>git rebase xxxx     // xxx为commit提交的ID</li>\n</ul>\n</li>\n</ul>","r":{"minutes":0.27,"words":81},"y":"a","t":"git问题","i":"pen-to-square"},["/docs/工具/git/git问题记录.html","/docs/%E5%B7%A5%E5%85%B7/git/git%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95","/docs/工具/git/git问题记录.md","/docs/%E5%B7%A5%E5%85%B7/git/git%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95.md"]],
  ["v-c936af28","/docs/%E5%B7%A5%E5%85%B7/mysql/mysql%E7%BC%93%E5%AD%98%E6%B1%A0-buffer%20pool.html",{"d":1700209207000,"c":["mysql"],"g":["buffer pool"],"e":"<h1> mysql-buffer pool</h1>\n<blockquote>\n<p>📌 <strong>关键词：</strong> mysql、buffer pool</p>\n</blockquote>\n<p>转~<a href=\"https://cloud.tencent.com/developer/article/2123140\" target=\"_blank\" rel=\"noopener noreferrer\">https://cloud.tencent.com/developer/article/2123140</a></p>\n<h2> 什么是Buffer Pool</h2>\n<ul>\n<li>在应用系统中，为了加速对数据的访问，通常将高频数据放入<strong>缓存</strong>中（Redis、MongoDB）,减轻数据库压力</li>\n<li>在操作系统中，为了减少磁盘I/O，引入了<strong>缓冲池</strong>机制</li>\n<li>Mysql作为存储系统，为了提高性能，减少磁盘I/O，同样具有<strong>缓冲池</strong>机制。</li>\n</ul>","r":{"minutes":4.21,"words":1263},"y":"a","t":"mysql-buffer pool","i":"pen-to-square"},["/docs/工具/mysql/mysql缓存池-buffer pool.html","/docs/%E5%B7%A5%E5%85%B7/mysql/mysql%E7%BC%93%E5%AD%98%E6%B1%A0-buffer%20pool","/docs/工具/mysql/mysql缓存池-buffer pool.md","/docs/%E5%B7%A5%E5%85%B7/mysql/mysql%E7%BC%93%E5%AD%98%E6%B1%A0-buffer%20pool.md"]],
  ["v-2c92bec8","/docs/%E5%B7%A5%E5%85%B7/mysql/mysql%E9%94%81.html",{"d":1700209207000,"c":["mysql"],"g":["锁"],"e":"<h1> mysql锁</h1>\n<blockquote>\n<p>📌 <strong>关键词：</strong> mysql、锁</p>\n</blockquote>\n<h2> 数据库种类</h2>\n<p>数据库锁有<strong>排他锁、共享锁、意向锁、自增锁、间隙锁</strong>，锁的范围包括<strong>行锁、表锁、区间锁</strong>。</p>\n<p>意向锁、自增锁、间隙锁是mysql内部逻辑锁，排他锁和共享锁是使用过程中用户添加的锁。</p>\n<h2> 排他锁</h2>\n<p>排他锁也被称为X锁（共享锁是S锁），加锁前需要<strong>开启事务</strong>，<strong>for update语句在事务中有效</strong>。如果事务A成功获取锁，其他事务无法对这条记录进行加锁（排他锁、共享锁），可以无锁查询。</p>","r":{"minutes":3.25,"words":976},"y":"a","t":"mysql锁","i":"pen-to-square"},["/docs/工具/mysql/mysql锁.html","/docs/%E5%B7%A5%E5%85%B7/mysql/mysql%E9%94%81","/docs/工具/mysql/mysql锁.md","/docs/%E5%B7%A5%E5%85%B7/mysql/mysql%E9%94%81.md"]],
  ["v-55302989","/docs/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/grep%E4%BD%BF%E7%94%A8.html",{"d":1700209207000,"c":["linux"],"g":["grep","文本搜索"],"e":"<h1> grep</h1>\n<blockquote>\n<p>📌 <strong>关键词：</strong> grep、文本搜索</p>\n</blockquote>\n<h2> </h2>\n","r":{"minutes":0.09,"words":27},"y":"a","t":"grep","i":"pen-to-square"},["/docs/操作系统/linux/grep使用.html","/docs/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/grep%E4%BD%BF%E7%94%A8","/docs/操作系统/linux/grep使用.md","/docs/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/grep%E4%BD%BF%E7%94%A8.md"]],
  ["v-77de7e7a","/docs/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/linux%E5%91%BD%E4%BB%A4.html",{"d":1700209207000,"c":["Linux"],"g":["命令"],"e":"<h1> Linux命令</h1>\n<blockquote>\n<p>📌 <strong>关键词：</strong> Linux、命令</p>\n</blockquote>\n<h2> 进程杀死</h2>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><pre class=\"language-java\"><code>\n<span class=\"token comment\">// 经过 killall 指令</span>\nkillall nginx\n<span class=\"token comment\">// 经过 pkill 指令，类似于 pgrep + kill</span>\npkill nginx\n<span class=\"token comment\">// 经过先查找再 kill 的方法</span>\nps <span class=\"token operator\">-</span>ef <span class=\"token operator\">|</span> grep nginx <span class=\"token operator\">|</span> grep <span class=\"token operator\">-</span>v grep <span class=\"token operator\">|</span> awk '<span class=\"token punctuation\">{</span>print $<span class=\"token number\">2</span><span class=\"token punctuation\">}</span>' <span class=\"token operator\">|</span> xargs kill <span class=\"token operator\">-</span><span class=\"token number\">9</span>\n<span class=\"token comment\">// 用 cut -c 来截取指定位置的字符串</span>\nps <span class=\"token operator\">-</span>ef <span class=\"token operator\">|</span> grep nginx <span class=\"token operator\">|</span> grep <span class=\"token operator\">-</span>v grep <span class=\"token operator\">|</span> cut <span class=\"token operator\">-</span>c <span class=\"token number\">11</span><span class=\"token operator\">-</span><span class=\"token number\">15</span> <span class=\"token operator\">|</span> xargs kill <span class=\"token operator\">-</span><span class=\"token number\">9</span>\n<span class=\"token comment\">// 经过 pgrep 指令，根据名字找出一切包括该名字的进程号</span>\npgrep nginx <span class=\"token operator\">|</span> xargs kill <span class=\"token operator\">-</span><span class=\"token number\">9</span>\n<span class=\"token comment\">// 经过 pidof 指令，根据进程全名找出进程号</span>\npidof nginx <span class=\"token operator\">|</span> kill <span class=\"token operator\">-</span><span class=\"token number\">9</span>\n<span class=\"token comment\">// 除了管道符的方法，也可以用指令替换，这样就不用经过 xargs 转化参数了</span>\nkill <span class=\"token operator\">-</span><span class=\"token number\">9</span> `pgrep nginx`\n\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":0.62,"words":186},"y":"a","t":"Linux命令","i":"pen-to-square"},["/docs/操作系统/linux/linux命令.html","/docs/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/linux%E5%91%BD%E4%BB%A4","/docs/操作系统/linux/linux命令.md","/docs/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/linux%E5%91%BD%E4%BB%A4.md"]],
  ["v-05786844","/docs/%E7%BD%91%E7%BB%9C/TCP/TCP%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E4%B8%8E%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B.html",{"d":1700209207000,"c":["网络"],"g":["tcp协议"],"e":"<h1> TCP</h1>\n<blockquote>\n<p>📌 <strong>关键词：</strong> TCP头部</p>\n</blockquote>\n<h2> TCP头部格式</h2>\n<figure><figcaption>image</figcaption></figure>\n<p><strong>序列号:</strong> 建立连接时，计算机生成<strong>随机数作为初始值</strong>，通过<strong>SYN包</strong>传给接收端主机，每发送一次数据，就<strong>累加</strong>一次该<strong>数据字节数</strong>的大小。<strong>解决网络包乱序问题</strong>。</p>","r":{"minutes":1.01,"words":302},"y":"a","t":"TCP","i":"pen-to-square"},["/docs/网络/TCP/TCP三次握手与四次挥手.html","/docs/%E7%BD%91%E7%BB%9C/TCP/TCP%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E4%B8%8E%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B","/docs/网络/TCP/TCP三次握手与四次挥手.md","/docs/%E7%BD%91%E7%BB%9C/TCP/TCP%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E4%B8%8E%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B.md"]],
  ["v-426f746a","/docs/%E7%BD%91%E7%BB%9C/%E5%9F%BA%E7%A1%80/%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B.html",{"d":1700209207000,"c":["网络"],"g":["tcp/ip"],"e":"<h1> TCP/IP协议</h1>\n<blockquote>\n<p>📌 <strong>关键词：</strong> 网络、TCP/IP</p>\n</blockquote>\n<h2> 诞生</h2>\n<p>TCP/IP是一种<strong>通信协议</strong>，它在1960年美国国防部支持开发的ARPANET网络上所使用。初期的ARPANET只连接了4个局域网，被认为是现代英特网的原型。</p>\n<p>当时英特网的主流是<strong>限定于大学和企业等特定机构内部使用局域网</strong>，所以每个机构网络都制作了<strong>各自独立的线路和协议</strong>。这种方式对于各个局域网内部通信来说毫无问题，但涉及到多个局域网连接时就需要对通信方法的统一。</p>","r":{"minutes":4.42,"words":1325},"y":"a","t":"TCP/IP协议","i":"pen-to-square"},["/docs/网络/基础/网络模型.html","/docs/%E7%BD%91%E7%BB%9C/%E5%9F%BA%E7%A1%80/%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B","/docs/网络/基础/网络模型.md","/docs/%E7%BD%91%E7%BB%9C/%E5%9F%BA%E7%A1%80/%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B.md"]],
  ["v-4b613e86","/docs/%E5%B7%A5%E5%85%B7/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/kafka/kafka%E6%A0%B8%E5%BF%83%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E8%B7%B5%E5%8E%9F%E7%90%86.html",{"d":1700209207000,"c":["消息队列"],"g":["kafka"],"e":"<h1> 笔记</h1>\n<blockquote>\n<p>📌 <strong>关键词：</strong> 消息队列、kafka</p>\n</blockquote>\n<p>深入理解Kafka核心设计与实践原理笔记~</p>\n<h2> 消费者</h2>\n<h3> 消费者与消费组</h3>\n<p>消费者（Consumer）负责订阅主题（Topic），并从订阅主题中拉取消息。<strong>kafka中有一层消费组（Consumer Group）的概念，每个消费者都有一个对应的消费组。消费发布到主题后，只会投递给订阅它的每个消费组中的一个消费者。</strong></p>\n<p>当某个主题共有4个分区（Partition）：P0、P1、P2、P3。两个消费者组A和B都订阅了该主题，消费组A中有4个消费者(CO、 Cl、 C2 和C3), 消费组B中有2个消费者(C4和CS)。 按照Kaflca默认的规则， 最后的分配结果是消费组A中的每一个消费者分配到1个分区， 消费组B中的每一个消费者分配到 2 个分区， 两个消费组之间互不影响。每个消费者只能消费所分配到的分区中的消息。<br>\n<strong>即：每一个分区只能被一个消费组中的一个消费者所消费。</strong></p>","r":{"minutes":1.98,"words":594},"y":"a","t":"笔记","i":"pen-to-square"},["/docs/工具/消息队列/kafka/kafka核心设计与实践原理.html","/docs/%E5%B7%A5%E5%85%B7/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/kafka/kafka%E6%A0%B8%E5%BF%83%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E8%B7%B5%E5%8E%9F%E7%90%86","/docs/工具/消息队列/kafka/kafka核心设计与实践原理.md","/docs/%E5%B7%A5%E5%85%B7/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/kafka/kafka%E6%A0%B8%E5%BF%83%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E8%B7%B5%E5%8E%9F%E7%90%86.md"]],
  ["v-3706649a","/404.html",{"y":"p","t":""},["/404"]],
  ["v-7a7c3e4c","/docs/other/",{"y":"p","t":"Other"},["/docs/other/index.html"]],
  ["v-147825fb","/docs/",{"y":"p","t":"Docs"},["/docs/index.html"]],
  ["v-6b4dfd9c","/docs/JAVA/",{"y":"p","t":"J A V A"},["/docs/JAVA/index.html"]],
  ["v-34b35616","/docs/worker/",{"y":"p","t":"Worker"},["/docs/worker/index.html"]],
  ["v-45c026a0","/docs/%E8%80%83%E8%AF%95/",{"y":"p","t":"考试"},["/docs/考试/","/docs/%E8%80%83%E8%AF%95/index.html"]],
  ["v-03714dc4","/docs/%E9%83%A8%E7%BD%B2/",{"y":"p","t":"部署"},["/docs/部署/","/docs/%E9%83%A8%E7%BD%B2/index.html"]],
  ["v-78c8b0a9","/docs/JAVA/%E5%A4%9A%E7%BA%BF%E7%A8%8B/",{"y":"p","t":"多线程"},["/docs/JAVA/多线程/","/docs/JAVA/%E5%A4%9A%E7%BA%BF%E7%A8%8B/index.html"]],
  ["v-4022e4c6","/docs/%E5%B7%A5%E5%85%B7/es/",{"y":"p","t":"Es"},["/docs/工具/es/","/docs/%E5%B7%A5%E5%85%B7/es/index.html"]],
  ["v-2a7eda9b","/docs/%E5%B7%A5%E5%85%B7/",{"y":"p","t":"工具"},["/docs/工具/","/docs/%E5%B7%A5%E5%85%B7/index.html"]],
  ["v-778b0090","/docs/%E5%B7%A5%E5%85%B7/git/",{"y":"p","t":"Git"},["/docs/工具/git/","/docs/%E5%B7%A5%E5%85%B7/git/index.html"]],
  ["v-aa8ee3b0","/docs/%E5%B7%A5%E5%85%B7/mysql/",{"y":"p","t":"Mysql"},["/docs/工具/mysql/","/docs/%E5%B7%A5%E5%85%B7/mysql/index.html"]],
  ["v-396caadd","/docs/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/",{"y":"p","t":"Linux"},["/docs/操作系统/linux/","/docs/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/index.html"]],
  ["v-60da42bc","/docs/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/",{"y":"p","t":"操作系统"},["/docs/操作系统/","/docs/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/index.html"]],
  ["v-8226f924","/docs/%E7%BD%91%E7%BB%9C/TCP/",{"y":"p","t":"T C P"},["/docs/网络/TCP/","/docs/%E7%BD%91%E7%BB%9C/TCP/index.html"]],
  ["v-d7008240","/docs/%E7%BD%91%E7%BB%9C/",{"y":"p","t":"网络"},["/docs/网络/","/docs/%E7%BD%91%E7%BB%9C/index.html"]],
  ["v-7286da12","/docs/%E7%BD%91%E7%BB%9C/%E5%9F%BA%E7%A1%80/",{"y":"p","t":"基础"},["/docs/网络/基础/","/docs/%E7%BD%91%E7%BB%9C/%E5%9F%BA%E7%A1%80/index.html"]],
  ["v-1ddb71f1","/docs/%E5%B7%A5%E5%85%B7/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/kafka/",{"y":"p","t":"Kafka"},["/docs/工具/消息队列/kafka/","/docs/%E5%B7%A5%E5%85%B7/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/kafka/index.html"]],
  ["v-0e037bb0","/docs/%E5%B7%A5%E5%85%B7/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/",{"y":"p","t":"消息队列"},["/docs/工具/消息队列/","/docs/%E5%B7%A5%E5%85%B7/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/index.html"]],
  ["v-5bc93818","/category/",{"y":"p","t":"分类","I":0},["/category/index.html"]],
  ["v-744d024e","/tag/",{"y":"p","t":"标签","I":0},["/tag/index.html"]],
  ["v-e52c881c","/article/",{"y":"p","t":"文章","I":0},["/article/index.html"]],
  ["v-154dc4c4","/star/",{"y":"p","t":"收藏","I":0},["/star/index.html"]],
  ["v-01560935","/timeline/",{"y":"p","t":"时间轴","I":0},["/timeline/index.html"]],
  ["v-5831b135","/category/java/",{"y":"p","t":"Java 分类","I":0},["/category/java/index.html"]],
  ["v-5e9c706e","/tag/comparator%E6%8E%92%E5%BA%8F/",{"y":"p","t":"Comparator排序 标签","I":0},["/tag/comparator排序/","/tag/comparator%E6%8E%92%E5%BA%8F/index.html"]],
  ["v-b2aa3dea","/category/centos/",{"y":"p","t":"centos 分类","I":0},["/category/centos/index.html"]],
  ["v-b47f1fa2","/tag/%E5%AF%B9%E8%B1%A1/",{"y":"p","t":"对象 标签","I":0},["/tag/对象/","/tag/%E5%AF%B9%E8%B1%A1/index.html"]],
  ["v-27fb5a12","/category/docker/",{"y":"p","t":"docker 分类","I":0},["/category/docker/index.html"]],
  ["v-61c9ea24","/tag/%E6%8A%A5%E9%94%99/",{"y":"p","t":"报错 标签","I":0},["/tag/报错/","/tag/%E6%8A%A5%E9%94%99/index.html"]],
  ["v-1f004e24","/category/windows/",{"y":"p","t":"windows 分类","I":0},["/category/windows/index.html"]],
  ["v-58188b98","/tag/jsonpath/",{"y":"p","t":"JsonPath 标签","I":0},["/tag/jsonpath/index.html"]],
  ["v-14145d44","/category/%E5%B7%A5%E5%85%B7/",{"y":"p","t":"工具 分类","I":0},["/category/工具/","/category/%E5%B7%A5%E5%85%B7/index.html"]],
  ["v-59fa8282","/tag/springboot/",{"y":"p","t":"springboot 标签","I":0},["/tag/springboot/index.html"]],
  ["v-65efd6b5","/category/git/",{"y":"p","t":"git 分类","I":0},["/category/git/index.html"]],
  ["v-e5120ed0","/tag/%E8%BD%AC%E7%A0%81/",{"y":"p","t":"转码 标签","I":0},["/tag/转码/","/tag/%E8%BD%AC%E7%A0%81/index.html"]],
  ["v-9717cc36","/category/mysql/",{"y":"p","t":"mysql 分类","I":0},["/category/mysql/index.html"]],
  ["v-35a878f8","/tag/%E6%97%B6%E5%8C%BA/",{"y":"p","t":"时区 标签","I":0},["/tag/时区/","/tag/%E6%97%B6%E5%8C%BA/index.html"]],
  ["v-9c48d85a","/category/linux/",{"y":"p","t":"linux 分类","I":0},["/category/linux/index.html"]],
  ["v-28a1d8bf","/tag/java/",{"y":"p","t":"java 标签","I":0},["/tag/java/index.html"]],
  ["v-d36ddc48","/tag/docker-compose/",{"y":"p","t":"docker-compose 标签","I":0},["/tag/docker-compose/index.html"]],
  ["v-5ff6b5a3","/category/%E7%BD%91%E7%BB%9C/",{"y":"p","t":"网络 分类","I":0},["/category/网络/","/category/%E7%BD%91%E7%BB%9C/index.html"]],
  ["v-11359857","/tag/%E8%84%9A%E6%9C%AC/",{"y":"p","t":"脚本 标签","I":0},["/tag/脚本/","/tag/%E8%84%9A%E6%9C%AC/index.html"]],
  ["v-36307ecb","/category/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/",{"y":"p","t":"消息队列 分类","I":0},["/category/消息队列/","/category/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/index.html"]],
  ["v-36ced019","/tag/%E9%97%AE%E9%A2%98/",{"y":"p","t":"问题 标签","I":0},["/tag/问题/","/tag/%E9%97%AE%E9%A2%98/index.html"]],
  ["v-1699163c","/tag/vmware%E5%AE%89%E8%A3%85/",{"y":"p","t":"vmware安装 标签","I":0},["/tag/vmware安装/","/tag/vmware%E5%AE%89%E8%A3%85/index.html"]],
  ["v-16e2b2ed","/tag/vmware/",{"y":"p","t":"vmware 标签","I":0},["/tag/vmware/index.html"]],
  ["v-5a3a75b2","/tag/centos7/",{"y":"p","t":"centos7 标签","I":0},["/tag/centos7/index.html"]],
  ["v-a9313856","/tag/%E7%BA%BF%E7%A8%8B%E6%B1%A0/",{"y":"p","t":"线程池 标签","I":0},["/tag/线程池/","/tag/%E7%BA%BF%E7%A8%8B%E6%B1%A0/index.html"]],
  ["v-0da0bc33","/tag/es/",{"y":"p","t":"es 标签","I":0},["/tag/es/index.html"]],
  ["v-b310d42a","/tag/git/",{"y":"p","t":"git 标签","I":0},["/tag/git/index.html"]],
  ["v-5f59e114","/tag/buffer-pool/",{"y":"p","t":"buffer pool 标签","I":0},["/tag/buffer-pool/index.html"]],
  ["v-62671174","/tag/%E9%94%81/",{"y":"p","t":"锁 标签","I":0},["/tag/锁/","/tag/%E9%94%81/index.html"]],
  ["v-287f0e8b","/tag/grep/",{"y":"p","t":"grep 标签","I":0},["/tag/grep/index.html"]],
  ["v-0243e03e","/tag/%E6%96%87%E6%9C%AC%E6%90%9C%E7%B4%A2/",{"y":"p","t":"文本搜索 标签","I":0},["/tag/文本搜索/","/tag/%E6%96%87%E6%9C%AC%E6%90%9C%E7%B4%A2/index.html"]],
  ["v-16f21ed9","/tag/%E5%91%BD%E4%BB%A4/",{"y":"p","t":"命令 标签","I":0},["/tag/命令/","/tag/%E5%91%BD%E4%BB%A4/index.html"]],
  ["v-533a2dfb","/tag/tcp%E5%8D%8F%E8%AE%AE/",{"y":"p","t":"tcp协议 标签","I":0},["/tag/tcp协议/","/tag/tcp%E5%8D%8F%E8%AE%AE/index.html"]],
  ["v-06795f96","/tag/tcpip/",{"y":"p","t":"tcp/ip 标签","I":0},["/tag/tcpip/index.html"]],
  ["v-257204d2","/tag/kafka/",{"y":"p","t":"kafka 标签","I":0},["/tag/kafka/index.html"]],
]
